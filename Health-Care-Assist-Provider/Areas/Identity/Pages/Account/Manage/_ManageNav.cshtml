@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var CurrentUser = await UserManager.GetUserAsync(User);
}

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>

    @switch (CurrentUser.UserType)
    {
        case 1:
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="Patients" asp-action="Edit">Edit Patient Data</a>
            </li>
            break;
        case 2:
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="Doctors" asp-action="Edit">Edit Doctor Data</a>
            </li>
            break;
        case 3:
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="Sponsors" asp-action="Edit">Edit Sponsor Data</a>
            </li>
            break;
        default: break;
    }
</ul>
